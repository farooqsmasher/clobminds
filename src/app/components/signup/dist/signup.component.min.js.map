{"version":3,"sources":["signup.component.ts"],"names":["core_1","require","forms_1","SignupComponent","formbuilder","_route","http","toast","this","Object","defineProperty","prototype","signup","get","ngOnInit","group","fname","Validators","required","minLength","maxLength","pattern","lname","email","phone","password","signupdata","_this","console","warn","signuser","value","post","subscribe","res","success","reset","navigate","err","alert","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBACAC,QAAAD,QAAA,kBAYAE,gBAAA,WAIE,SAAAA,EAAoBC,EAAiCC,EAAuBC,EAAwBC,GAAhFC,KAAAJ,YAAAA,EAAiCI,KAAAH,OAAAA,EAAuBG,KAAAF,KAAAA,EAAwBE,KAAAD,MAAAA,EA4CtG,OA1CIE,OAAAC,eAAIP,EAAAQ,UAAA,QAAK,KAAT,WAAc,OAAOH,KAAKI,OAAOC,IAAI,0CACrCJ,OAAAC,eAAIP,EAAAQ,UAAA,QAAK,KAAT,WAAc,OAAOH,KAAKI,OAAOC,IAAI,0CACrCJ,OAAAC,eAAIP,EAAAQ,UAAA,QAAK,KAAT,WAAc,OAAOH,KAAKI,OAAOC,IAAI,0CACrCJ,OAAAC,eAAIP,EAAAQ,UAAA,QAAK,KAAT,WAAc,OAAOH,KAAKI,OAAOC,IAAI,0CACrCJ,OAAAC,eAAIP,EAAAQ,UAAA,WAAQ,KAAZ,WAAiB,OAAOH,KAAKI,OAAOC,IAAI,6CAC1CV,EAAAQ,UAAAG,SAAA,WACCN,KAAKI,OAASJ,KAAKJ,YAAYW,MAAM,CACpCC,MAAM,CAAC,GAAG,CAACd,QAAAe,WAAWC,SAAShB,QAAAe,WAAWE,UAAU,GAAGjB,QAAAe,WAAWG,UAAU,IAAIlB,QAAAe,WAAWI,QAAQ,gBACnGC,MAAM,CAAC,GAAG,CAACpB,QAAAe,WAAWC,SAAShB,QAAAe,WAAWE,UAAU,GAAGjB,QAAAe,WAAWG,UAAU,IAAIlB,QAAAe,WAAWI,QAAQ,gBACnGE,MAAM,CAAC,GAAG,CAACrB,QAAAe,WAAWC,SAAShB,QAAAe,WAAWM,QAC1CC,MAAM,CAAC,GAAG,CAACtB,QAAAe,WAAWC,SAAShB,QAAAe,WAAWE,UAAU,IAAIjB,QAAAe,WAAWG,UAAU,IAAIlB,QAAAe,WAAWI,QAAQ,eACpGI,SAAS,CAAC,GAAG,CAACvB,QAAAe,WAAWC,SAAShB,QAAAe,WAAWE,UAAU,GAAGjB,QAAAe,WAAWG,UAAU,SASjFjB,EAAAQ,UAAAe,WAAA,SAAWd,GAAX,IAAAe,EAAAnB,KACEoB,QAAQC,KAAKrB,KAAKI,QAElBJ,KAAKsB,SAAWtB,KAAKI,OAAOmB,MAAMf,MAClCR,KAAKF,KAAK0B,KAAU,gCAAgCxB,KAAKI,OAAOmB,OAC/DE,UAAU,SAAAC,GAETP,EAAKpB,MAAM4B,QAAQR,EAAKG,SAAS,8BACjCH,EAAKf,OAAOwB,QACZT,EAAKtB,OAAOgC,SAAS,CAAC,WACtB,SAAAC,GACAC,MAAM,2BArCCpC,EAAeqC,WAAA,CAL3BxC,OAAAyC,UAAU,CACTC,SAAU,aACVC,YAAa,0BACbC,UAAW,CAAC,6BAEDzC,GAAb,GAAa0C,QAAA1C,gBAAAA","file":"signup.component.min.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component,OnInit } from '@angular/core';\nimport {FormControl,FormGroup, FormBuilder,Validators } from '@angular/forms';\nimport { RouterModule ,Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  \n public signup !: FormGroup;\n  public signuser :any\n  constructor(private formbuilder: FormBuilder,private _route:Router, private http:HttpClient,private toast:ToastrService ){ }\n    // signup:FormGroup|any;\n    get fname() { return this.signup.get('fname');}\n    get lname() { return this.signup.get('lname');}\n    get phone() { return this.signup.get('phone');}\n    get email() { return this.signup.get('email');}\n    get password() { return this.signup.get('password');}\n  ngOnInit(): void {\n   this.signup = this.formbuilder.group({\n    fname:['',[Validators.required,Validators.minLength(3),Validators.maxLength(15),Validators.pattern('[a-zA-Z ]*')]],\n    lname:['',[Validators.required,Validators.minLength(3),Validators.maxLength(15),Validators.pattern('[a-zA-Z ]*')]],\n    email:['',[Validators.required,Validators.email]],\n    phone:['',[Validators.required,Validators.minLength(10),Validators.maxLength(11),Validators.pattern('[0-9]{10}')]],\n    password:['',[Validators.required,Validators.minLength(8),Validators.maxLength(15)]]\n    // 'fname': new FormControl(),\n    // 'lname': new FormControl(),\n    // 'email': new FormControl(),\n    // 'phone': new FormControl(),\n    // 'password':new FormControl\n\n   }) \n  }\n  signupdata(signup:FormGroup){\n    console.warn(this.signup);\n    // console.log(this.signup.value);\n    this.signuser = this.signup.value.fname;\n    this.http.post<any>(' http://localhost:3000/signup',this.signup.value)\n    .subscribe(res=>{\n      // alert(this.signuser+'successfully signed in....');\n      this.toast.success(this.signuser,'successfully signed in....');\n      this.signup.reset();\n      this._route.navigate(['login']);\n    },err=>{\n      alert(\"something went wrong\")\n    })\n\n   \n  }\n  // sbtn() {\n  //   this._route.navigate(['login']);\n  //   $('.form-box').css('display','block');\n  //   $('. form-box1').css('display','none');\n  // }\n \n}\n"]}