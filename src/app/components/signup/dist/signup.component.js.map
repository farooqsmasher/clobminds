{"version":3,"sources":["signup.component.ts"],"names":[],"mappings":"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","file":"signup.component.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component,OnInit } from '@angular/core';\nimport {FormControl,FormGroup, FormBuilder,Validators } from '@angular/forms';\nimport { RouterModule ,Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  \n public signup !: FormGroup;\n  public signuser :any\n  constructor(private formbuilder: FormBuilder,private _route:Router, private http:HttpClient,private toast:ToastrService ){ }\n    // signup:FormGroup|any;\n    get fname() { return this.signup.get('fname');}\n    get lname() { return this.signup.get('lname');}\n    get phone() { return this.signup.get('phone');}\n    get email() { return this.signup.get('email');}\n    get password() { return this.signup.get('password');}\n  ngOnInit(): void {\n   this.signup = this.formbuilder.group({\n    fname:['',[Validators.required,Validators.minLength(3),Validators.maxLength(15),Validators.pattern('[a-zA-Z ]*')]],\n    lname:['',[Validators.required,Validators.minLength(3),Validators.maxLength(15),Validators.pattern('[a-zA-Z ]*')]],\n    email:['',[Validators.required,Validators.email]],\n    phone:['',[Validators.required,Validators.minLength(10),Validators.maxLength(11),Validators.pattern('[0-9]{10}')]],\n    password:['',[Validators.required,Validators.minLength(8),Validators.maxLength(15)]]\n    // 'fname': new FormControl(),\n    // 'lname': new FormControl(),\n    // 'email': new FormControl(),\n    // 'phone': new FormControl(),\n    // 'password':new FormControl\n\n   }) \n  }\n  signupdata(signup:FormGroup){\n    console.warn(this.signup);\n    // console.log(this.signup.value);\n    this.signuser = this.signup.value.fname;\n    this.http.post<any>(' http://localhost:3000/signup',this.signup.value)\n    .subscribe(res=>{\n      // alert(this.signuser+'successfully signed in....');\n      this.toast.success(this.signuser,'successfully signed in....');\n      this.signup.reset();\n      this._route.navigate(['login']);\n    },err=>{\n      alert(\"something went wrong\")\n    })\n\n   \n  }\n  // sbtn() {\n  //   this._route.navigate(['login']);\n  //   $('.form-box').css('display','block');\n  //   $('. form-box1').css('display','none');\n  // }\n \n}\n"]}