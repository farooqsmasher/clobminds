{"version":3,"sources":["login.component.ts"],"names":[],"mappings":";;;;;;;;AAEA,sCAAiD;AACjD,wCAA8E;AAS9E;IAGE,wBAAoB,WAAwB,EAAS,MAAa,EAAU,IAAe,EAAS,KAAmB;QAAnG,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAU,SAAI,GAAJ,IAAI,CAAW;QAAS,UAAK,GAAL,KAAK,CAAc;IAAI,CAAC;IAC7H,sBAAI,iCAAK;aAAT,cAAc,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAA,CAAC;;;OAAA;IAC9C,sBAAI,oCAAQ;aAAZ,cAAiB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAA,CAAC;;;OAAA;IACnD,iCAAQ,GAAR;QACC,IAAI,CAAC,KAAK,GAAG,IAAI,iBAAS,CAAC;YAC1B,OAAO,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAC,CAAC,kBAAU,CAAC,QAAQ,EAAC,kBAAU,CAAC,KAAK,CAAC,CAAC;YACnE,UAAU,EAAC,IAAI,mBAAW,CAAC,EAAE,EAAC,kBAAU,CAAC,QAAQ,CAAC;SAElD,CAAC,CAAA;IACH,CAAC;IACD,kCAAS,GAAT,UAAU,KAAe;QAAzB,iBAqBC;QApBC,iCAAiC;QACjC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,8BAA8B,CAAC,CAAC,SAAS,CAAC,UAAA,GAAG;YAC9D,IAAM,IAAI,GAAE,GAAG,CAAC,IAAI,CAAC,UAAC,CAAO;gBAC3B,OAAO,CAAC,CAAC,KAAK,KAAK,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,QAAQ,KAAK,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAA;YACvF,CAAC,CAAC,CAAC;YACH,IAAG,IAAI,EAAC;gBACN,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBAC1C,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBAGnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBACI;gBACH,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBACtC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;QACH,CAAC,EAAC,UAAA,GAAG;YACH,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAA;IACJ,CAAC;IAlCU,cAAc;QAL1B,gBAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,wBAAwB;YACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;SACrC,CAAC;OACW,cAAc,CAmC1B;IAAD,qBAAC;CAnCD,AAmCC,IAAA;AAnCY,wCAAc","file":"login.component.js","sourcesContent":["\nimport { HttpClient } from '@angular/common/http';\nimport { Component,OnInit } from '@angular/core';\nimport {FormControl,FormGroup, FormBuilder,Validators } from '@angular/forms';\nimport { RouterModule ,Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit \n{\n  login:FormGroup|any;\n  constructor(private formbuilder: FormBuilder,private _route:Router, private http:HttpClient,private toast:ToastrService ){ }\n get email() { return this.login.get('email');}\n get password() { return this.login.get('password');}\n  ngOnInit(): void {\n   this.login = new FormGroup({\n    'email': new FormControl('',[Validators.required,Validators.email]),\n    'password':new FormControl('',Validators.required)\n\n   }) \n  }\n  logindata(login:FormGroup){\n    // console.log(this.login.value);\n    console.warn(this.login);\n    this.http.get<any>('http://localhost:3000/signup').subscribe(res=>{\n      const user =res.find((a : any)=>{\n        return a.email === this.login.value.email && a.password === this.login.value.password\n      });\n      if(user){\n        alert('you are successfully logged in..');\n        this.login.reset();\n      \n        \n        this._route.navigate(['dashboard']);\n      }\n      else {\n        alert('user not found!please signup');\n        this._route.navigate(['login']);\n      }\n    },err=> {\n      alert('something was wrong');\n    })\n  }\n}\n"]}